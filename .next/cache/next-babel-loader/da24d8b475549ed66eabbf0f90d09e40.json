{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/inbaeyoon/Desktop/nextjs-portfolio/pages/_document.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheet, createGlobalStyle } from 'styled-components';\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'Open Sans';\n    src: url('/static/fonts/OpenSans-Bold.ttf');\n    src: url('/static/fonts/OpenSans-Italic.ttf');\n    src: url('/static/fonts/OpenSans-Light.ttf');\n    src: url('/static/fonts/OpenSans-Regular.ttf');\n    src: url('/static/fonts/OpenSans-SemiBold.ttf');\n  } \n  html {\n    height:100%;\n\n  }\n  body {\n    margin: 0;\n    padding: 0;  \n    font-family: \"Open Sans\" \n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  * {\n    box-sizing: inherit; /* 모든 엘리먼트의 box-sizing 값을 border-box로 설정 */ \n  }\n`;\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => sheet.collectStyles(__jsx(App, _extends({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        })))\n      });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread({}, initialProps, {\n        styles: __jsx(React.Fragment, null, initialProps.styles, sheet.getStyleElement())\n      });\n    } finally {\n      sheet.seal();\n    }\n  }\n\n  render() {\n    return __jsx(Html, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(\"meta\", {\n      charSet: \"utf-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1, shrink-to-fit=no, user-scalable=0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), __jsx(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, __jsx(GlobalStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), __jsx(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), __jsx(NextScript, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/inbaeyoon/Desktop/nextjs-portfolio/pages/_document.js"],"names":["Document","Html","Head","Main","NextScript","ServerStyleSheet","createGlobalStyle","GlobalStyle","MyDocument","getInitialProps","ctx","sheet","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","initialProps","styles","getStyleElement","seal","render"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AAEA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,mBAApD;AAEA,MAAMC,WAAW,GAAGD,iBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;CAAtC;AA2BA,eAAe,MAAME,UAAN,SAAyBR,QAAzB,CAAkC;AAC/C,eAAaS,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAMC,KAAK,GAAG,IAAIN,gBAAJ,EAAd;AACA,UAAMO,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEA,QAAI;AACFH,MAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjBE,QAAAA,UAAU,EAAEC,GAAG,IAAIC,KAAK,IAAIL,KAAK,CAACM,aAAN,CAAoB,MAAC,GAAD,eAASD,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAApB;AADX,OAAD,CADpB;;AAKA,YAAME,YAAY,GAAG,MAAMlB,QAAQ,CAACS,eAAT,CAAyBC,GAAzB,CAA3B;AACA,+BACKQ,YADL;AAEEC,QAAAA,MAAM,EACJ,4BACGD,YAAY,CAACC,MADhB,EAEGR,KAAK,CAACS,eAAN,EAFH;AAHJ;AASD,KAhBD,SAgBU;AACRT,MAAAA,KAAK,CAACU,IAAN;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAC,wEAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CARF,CADF;AAgBD;;AA3C8C","sourcesContent":["import Document, { Html, Head, Main, NextScript } from 'next/document';\n\nimport { ServerStyleSheet, createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'Open Sans';\n    src: url('/static/fonts/OpenSans-Bold.ttf');\n    src: url('/static/fonts/OpenSans-Italic.ttf');\n    src: url('/static/fonts/OpenSans-Light.ttf');\n    src: url('/static/fonts/OpenSans-Regular.ttf');\n    src: url('/static/fonts/OpenSans-SemiBold.ttf');\n  } \n  html {\n    height:100%;\n\n  }\n  body {\n    margin: 0;\n    padding: 0;  \n    font-family: \"Open Sans\" \n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  * {\n    box-sizing: inherit; /* 모든 엘리먼트의 box-sizing 값을 border-box로 설정 */ \n  }\n`;\n\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () =>\n        originalRenderPage({\n          enhanceApp: App => props => sheet.collectStyles(<App {...props} />)\n        });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return {\n        ...initialProps,\n        styles: (\n          <>\n            {initialProps.styles}\n            {sheet.getStyleElement()}\n          </>\n        )\n      };\n    } finally {\n      sheet.seal();\n    }\n  }\n\n  render() {\n    return (\n      <Html>\n        <Head>\n          <meta charSet='utf-8' />\n          <meta\n            name='viewport'\n            content='width=device-width, initial-scale=1, shrink-to-fit=no, user-scalable=0'\n          />\n        </Head>\n        <body>\n          <GlobalStyle />\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}